[package]
name = "desktop_core"
edition = { workspace = true }
license = { workspace = true }
version = { workspace = true }
publish = { workspace = true }

[features]
default = [
    "dep:widestring",
    "dep:windows",
    "dep:core-foundation",
    "dep:security-framework",
    "dep:security-framework-sys",
    "dep:zbus",
    "dep:zbus_polkit"
]
manual_test = []

[dependencies]
aes = { workspace = true }
anyhow = { workspace = true }
arboard = { workspace = true, features = ["wayland-data-control"] }
base64 = { workspace = true }
bitwarden-russh = { workspace = true }
bytes = { workspace = true }
cbc = { workspace = true, features = ["alloc"] }
chacha20poly1305 = { workspace = true }
dirs = { workspace = true }
futures = { workspace = true }
homedir = { workspace = true }
interprocess = { workspace = true, features = ["tokio"] }
memsec = { workspace = true, features = ["alloc_ext"] }
pin-project = { workspace = true }
rand = { workspace = true }
scopeguard = { workspace = true }
secmem-proc = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
sha2 = { workspace = true }
ssh-key = { workspace = true, features = [
    "encryption",
    "ed25519",
    "rsa",
    "getrandom",
] }
sysinfo = { workspace = true, features = ["windows"] }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["io-util", "sync", "macros", "net"] }
tokio-util = { workspace = true, features = ["codec"] }
tracing = { workspace = true }
typenum = { workspace = true }
zeroizing-alloc = { workspace = true }

[target.'cfg(windows)'.dependencies]
widestring = { workspace = true, optional = true }
windows = { workspace = true, features = [
    "Foundation",
    "Security_Credentials_UI",
    "Security_Cryptography",
    "Storage_Streams",
    "Win32_Foundation",
    "Win32_Security_Credentials",
    "Win32_Security_Cryptography",
    "Win32_System_WinRT",
    "Win32_UI_Input_KeyboardAndMouse",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System_Pipes",
], optional = true }
windows-future = { workspace = true }

[target.'cfg(windows)'.dev-dependencies]
keytar = { workspace = true }

[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = { workspace = true, optional = true }
security-framework = { workspace = true, optional = true }
security-framework-sys = { workspace = true, optional = true }
desktop_objc = { path = "../objc" }

[target.'cfg(target_os = "linux")'.dependencies]
oo7 = { workspace = true }
libc = { workspace = true }
linux-keyutils = { workspace = true }
ashpd = { workspace = true }

zbus = { workspace = true, optional = true }
zbus_polkit = { workspace = true, optional = true }

[lints]
workspace = true
